# VM invoker: /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.esfbench.ashley.BaselineBenchmark.baseline
# Parameters: (entityCount = 1024)

# Run progress: 0.00% complete, ETA 00:07:00
# Fork: 1 of 1
# Warmup Iteration   1: 30793.342 ops/s
# Warmup Iteration   2: 31966.508 ops/s
# Warmup Iteration   3: 32137.267 ops/s
# Warmup Iteration   4: 30800.395 ops/s
# Warmup Iteration   5: 29373.118 ops/s
Iteration   1: 27570.238 ops/s
Iteration   2: 26828.177 ops/s
Iteration   3: 26270.992 ops/s


Result: 26889.802 ±(99.9%) 11891.463 ops/s [Average]
  Statistics: (min, avg, max) = (26270.992, 26889.802, 27570.238), stdev = 651.811
  Confidence interval (99.9%): [14998.339, 38781.265]


# VM invoker: /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.esfbench.ashley.BaselineBenchmark.baseline
# Parameters: (entityCount = 4096)

# Run progress: 8.33% complete, ETA 00:06:46
# Fork: 1 of 1
# Warmup Iteration   1: 7690.822 ops/s
# Warmup Iteration   2: 7868.958 ops/s
# Warmup Iteration   3: 7822.987 ops/s
# Warmup Iteration   4: 7842.540 ops/s
# Warmup Iteration   5: 7848.221 ops/s
Iteration   1: 7948.039 ops/s
Iteration   2: 7943.316 ops/s
Iteration   3: 7947.785 ops/s


Result: 7946.380 ±(99.9%) 48.466 ops/s [Average]
  Statistics: (min, avg, max) = (7943.316, 7946.380, 7948.039), stdev = 2.657
  Confidence interval (99.9%): [7897.914, 7994.846]


# VM invoker: /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.esfbench.ashley.BaselineBenchmark.baseline
# Parameters: (entityCount = 16384)

# Run progress: 16.67% complete, ETA 00:06:09
# Fork: 1 of 1
# Warmup Iteration   1: 1924.507 ops/s
# Warmup Iteration   2: 1963.547 ops/s
# Warmup Iteration   3: 1971.940 ops/s
# Warmup Iteration   4: 1968.129 ops/s
# Warmup Iteration   5: 1954.769 ops/s
Iteration   1: 1987.092 ops/s
Iteration   2: 1985.051 ops/s
Iteration   3: 1987.770 ops/s


Result: 1986.638 ±(99.9%) 25.820 ops/s [Average]
  Statistics: (min, avg, max) = (1985.051, 1986.638, 1987.770), stdev = 1.415
  Confidence interval (99.9%): [1960.818, 2012.457]


# VM invoker: /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.esfbench.ashley.BaselineBenchmark.baseline
# Parameters: (entityCount = 65536)

# Run progress: 25.00% complete, ETA 00:05:32
# Fork: 1 of 1
# Warmup Iteration   1: 232.597 ops/s
# Warmup Iteration   2: 241.212 ops/s
# Warmup Iteration   3: 240.522 ops/s
# Warmup Iteration   4: 240.361 ops/s
# Warmup Iteration   5: 240.761 ops/s
Iteration   1: 241.764 ops/s
Iteration   2: 243.057 ops/s
Iteration   3: 243.429 ops/s


Result: 242.750 ±(99.9%) 15.952 ops/s [Average]
  Statistics: (min, avg, max) = (241.764, 242.750, 243.429), stdev = 0.874
  Confidence interval (99.9%): [226.798, 258.702]


# VM invoker: /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.esfbench.ashley.InsertRemoveBenchmark.insert_remove
# Parameters: (entityCount = 1024)

# Run progress: 33.33% complete, ETA 00:04:55
# Fork: 1 of 1
# Warmup Iteration   1: 7120.957 ops/s
# Warmup Iteration   2: 8374.402 ops/s
# Warmup Iteration   3: 8359.728 ops/s
# Warmup Iteration   4: 8353.328 ops/s
# Warmup Iteration   5: 8604.843 ops/s
Iteration   1: 8582.932 ops/s
Iteration   2: 8608.760 ops/s
Iteration   3: 8579.094 ops/s


Result: 8590.262 ±(99.9%) 294.353 ops/s [Average]
  Statistics: (min, avg, max) = (8579.094, 8590.262, 8608.760), stdev = 16.134
  Confidence interval (99.9%): [8295.909, 8884.614]


# VM invoker: /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.esfbench.ashley.InsertRemoveBenchmark.insert_remove
# Parameters: (entityCount = 4096)

# Run progress: 41.67% complete, ETA 00:04:18
# Fork: 1 of 1
# Warmup Iteration   1: 1455.438 ops/s
# Warmup Iteration   2: 1567.969 ops/s
# Warmup Iteration   3: 1615.198 ops/s
# Warmup Iteration   4: 1597.802 ops/s
# Warmup Iteration   5: 1633.519 ops/s
Iteration   1: 1627.390 ops/s
Iteration   2: 1635.559 ops/s
Iteration   3: 1634.169 ops/s


Result: 1632.372 ±(99.9%) 79.741 ops/s [Average]
  Statistics: (min, avg, max) = (1627.390, 1632.372, 1635.559), stdev = 4.371
  Confidence interval (99.9%): [1552.632, 1712.113]


# VM invoker: /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.esfbench.ashley.InsertRemoveBenchmark.insert_remove
# Parameters: (entityCount = 16384)

# Run progress: 50.00% complete, ETA 00:03:41
# Fork: 1 of 1
# Warmup Iteration   1: 173.071 ops/s
# Warmup Iteration   2: 189.265 ops/s
# Warmup Iteration   3: 190.342 ops/s
# Warmup Iteration   4: 188.747 ops/s
# Warmup Iteration   5: 192.207 ops/s
Iteration   1: 193.318 ops/s
Iteration   2: 193.845 ops/s
Iteration   3: 193.826 ops/s


Result: 193.663 ±(99.9%) 5.452 ops/s [Average]
  Statistics: (min, avg, max) = (193.318, 193.663, 193.845), stdev = 0.299
  Confidence interval (99.9%): [188.211, 199.115]


# VM invoker: /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.esfbench.ashley.InsertRemoveBenchmark.insert_remove
# Parameters: (entityCount = 65536)

# Run progress: 58.33% complete, ETA 00:03:04
# Fork: 1 of 1
# Warmup Iteration   1: 12.118 ops/s
# Warmup Iteration   2: 12.642 ops/s
# Warmup Iteration   3: 14.506 ops/s
# Warmup Iteration   4: 14.870 ops/s
# Warmup Iteration   5: 14.435 ops/s
Iteration   1: 14.740 ops/s
Iteration   2: 14.711 ops/s
Iteration   3: 14.715 ops/s


Result: 14.722 ±(99.9%) 0.290 ops/s [Average]
  Statistics: (min, avg, max) = (14.711, 14.722, 14.740), stdev = 0.016
  Confidence interval (99.9%): [14.432, 15.012]


# VM invoker: /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.esfbench.ashley.PlainComponentBenchmark.plain
# Parameters: (entityCount = 1024)

# Run progress: 66.67% complete, ETA 00:02:28
# Fork: 1 of 1
# Warmup Iteration   1: 15951.882 ops/s
# Warmup Iteration   2: 16475.373 ops/s
# Warmup Iteration   3: 16522.134 ops/s
# Warmup Iteration   4: 16456.549 ops/s
# Warmup Iteration   5: 16530.928 ops/s
Iteration   1: 14251.110 ops/s
Iteration   2: 12916.442 ops/s
Iteration   3: 11946.944 ops/s


Result: 13038.165 ±(99.9%) 21106.078 ops/s [Average]
  Statistics: (min, avg, max) = (11946.944, 13038.165, 14251.110), stdev = 1156.895
  Confidence interval (99.9%): [-8067.912, 34144.243]


# VM invoker: /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.esfbench.ashley.PlainComponentBenchmark.plain
# Parameters: (entityCount = 4096)

# Run progress: 75.00% complete, ETA 00:01:51
# Fork: 1 of 1
# Warmup Iteration   1: 4001.415 ops/s
# Warmup Iteration   2: 4145.676 ops/s
# Warmup Iteration   3: 4117.937 ops/s
# Warmup Iteration   4: 4110.880 ops/s
# Warmup Iteration   5: 4143.710 ops/s
Iteration   1: 4167.790 ops/s
Iteration   2: 4163.656 ops/s
Iteration   3: 4167.921 ops/s


Result: 4166.456 ±(99.9%) 44.254 ops/s [Average]
  Statistics: (min, avg, max) = (4163.656, 4166.456, 4167.921), stdev = 2.426
  Confidence interval (99.9%): [4122.202, 4210.709]


# VM invoker: /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.esfbench.ashley.PlainComponentBenchmark.plain
# Parameters: (entityCount = 16384)

# Run progress: 83.33% complete, ETA 00:01:13
# Fork: 1 of 1
# Warmup Iteration   1: 444.102 ops/s
# Warmup Iteration   2: 451.513 ops/s
# Warmup Iteration   3: 454.180 ops/s
# Warmup Iteration   4: 451.689 ops/s
# Warmup Iteration   5: 454.698 ops/s
Iteration   1: 460.103 ops/s
Iteration   2: 459.623 ops/s
Iteration   3: 461.723 ops/s


Result: 460.483 ±(99.9%) 20.070 ops/s [Average]
  Statistics: (min, avg, max) = (459.623, 460.483, 461.723), stdev = 1.100
  Confidence interval (99.9%): [440.414, 480.553]


# VM invoker: /usr/lib/jvm/java-7-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.github.esfbench.ashley.PlainComponentBenchmark.plain
# Parameters: (entityCount = 65536)

# Run progress: 91.67% complete, ETA 00:00:37
# Fork: 1 of 1
# Warmup Iteration   1: 53.584 ops/s
# Warmup Iteration   2: 58.774 ops/s
# Warmup Iteration   3: 58.570 ops/s
# Warmup Iteration   4: 58.518 ops/s
# Warmup Iteration   5: 58.884 ops/s
Iteration   1: 58.875 ops/s
Iteration   2: 58.916 ops/s
Iteration   3: 58.879 ops/s


Result: 58.890 ±(99.9%) 0.410 ops/s [Average]
  Statistics: (min, avg, max) = (58.875, 58.890, 58.916), stdev = 0.022
  Confidence interval (99.9%): [58.480, 59.300]


# Run complete. Total time: 00:07:24

Benchmark                                      (entityCount)   Mode  Samples      Score       Error  Units
c.g.e.a.BaselineBenchmark.baseline                      1024  thrpt        3  26889.802 ± 11891.463  ops/s
c.g.e.a.BaselineBenchmark.baseline                      4096  thrpt        3   7946.380 ±    48.466  ops/s
c.g.e.a.BaselineBenchmark.baseline                     16384  thrpt        3   1986.638 ±    25.820  ops/s
c.g.e.a.BaselineBenchmark.baseline                     65536  thrpt        3    242.750 ±    15.952  ops/s
c.g.e.a.InsertRemoveBenchmark.insert_remove             1024  thrpt        3   8590.262 ±   294.353  ops/s
c.g.e.a.InsertRemoveBenchmark.insert_remove             4096  thrpt        3   1632.372 ±    79.741  ops/s
c.g.e.a.InsertRemoveBenchmark.insert_remove            16384  thrpt        3    193.663 ±     5.452  ops/s
c.g.e.a.InsertRemoveBenchmark.insert_remove            65536  thrpt        3     14.722 ±     0.290  ops/s
c.g.e.a.PlainComponentBenchmark.plain                   1024  thrpt        3  13038.165 ± 21106.078  ops/s
c.g.e.a.PlainComponentBenchmark.plain                   4096  thrpt        3   4166.456 ±    44.254  ops/s
c.g.e.a.PlainComponentBenchmark.plain                  16384  thrpt        3    460.483 ±    20.070  ops/s
c.g.e.a.PlainComponentBenchmark.plain                  65536  thrpt        3     58.890 ±     0.410  ops/s
